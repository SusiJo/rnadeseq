name: CI
# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  push:
    branches:
      - 2.1
  pull_request:
  release:
    types: [published]

env:
  NXF_ANSI_LOG: false
  CAPSULE_LOG: none

jobs:
  test:
    name: Run pipeline with test data
    # Only run on push if this is the nf-core 2.1 branch (merged PRs)
    if: "${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'qbic-pipelines/rnadeseq') }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Nextflow versions
        include:
          # Test pipeline minimum Nextflow version
          - NXF_VER: "21.10.3"
            NXF_EDGE: ""
          # Test latest edge release of Nextflow
          - NXF_VER: ""
            NXF_EDGE: "1"
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v2

      - name: Check if Dockerfile or Conda environment changed
        uses: technote-space/get-diff-action@v4
        with:
          FILES: |
            Dockerfile
            environment.yml
      - name: Build new docker image
        if: env.MATCHED_FILES
        run: docker build --no-cache . -t qbicpipelines/rnadeseq:2.1

      - name: Pull docker image
        if: ${{ !env.MATCHED_FILES }}
        run: |
          docker pull qbicpipelines/rnadeseq:dev
          docker tag qbicpipelines/rnadeseq:dev qbicpipelines/rnadeseq:2.1

      - name: Install Nextflow
        env:
          NXF_VER: ${{ matrix.NXF_VER }}
          # Uncomment only if the edge release is more recent than the latest stable release
          # See https://github.com/nextflow-io/nextflow/issues/2467
          # NXF_EDGE: ${{ matrix.NXF_EDGE }}
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - name: Run pipeline with test data
        run: nextflow run ${GITHUB_WORKSPACE} -profile test,docker

  parameters:
    name: Test workflow parameters
    runs-on: ubuntu-latest
    env:
      NXF_VER: "21.10.3"
      NXF_ANSI_LOG: false
    strategy:
      # This tells github to continue running other profile tests if some tests fail (default cancels all tests upon failure)
      fail-fast: false
      matrix:
        config:
          [
            "test",
            "test_full",
            "test_contrast_matrix",
            "test_contrast_list",
            "test_no_multiqc",
            "test_relevel",
            "test_star_rsem",
            "test_star_salmon",
            "test_use_vst",
            "test_batcheffect",
            "test_custom_gmt",
          ]
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v2

      - name: Check if Dockerfile or Conda environment changed
        uses: technote-space/get-diff-action@v4
        with:
          FILES: |
            Dockerfile
            environment.yml
      - name: Build new docker image
        if: env.MATCHED_FILES
        run: docker build --no-cache . -t qbicpipelines/rnadeseq:2.1

      - name: Pull docker image
        if: ${{ !env.MATCHED_FILES }}
        run: |
          docker pull qbicpipelines/rnadeseq:dev
          docker tag qbicpipelines/rnadeseq:dev qbicpipelines/rnadeseq:2.1

      - name: Install Nextflow
        env:
          NXF_VER: ${{ matrix.NXF_VER }}
          # Uncomment only if the edge release is more recent than the latest stable release
          # See https://github.com/nextflow-io/nextflow/issues/2467
          # NXF_EDGE: ${{ matrix.NXF_EDGE }}
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: python -m pip install --upgrade pip pytest-workflow

      - name: Run pipeline with tests settings
        uses: Wandalen/wretry.action@v1.0.11
        with:
          command: pytest --tag ${{ matrix.config }} --kwdof --git-aware --color=yes
          attempt_limit: 3

      - name: Output log on failure
        if: failure()
        run: |
          sudo apt install bat > /2.1/null
          batcat --decorations=always --color=always /tmp/pytest_workflow_*/*/log.{out,err}

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs-${{ matrix.profile }}
          path: |
            /tmp/pytest_workflow_*/*/.nextflow.log
            /tmp/pytest_workflow_*/*/log.out
            /tmp/pytest_workflow_*/*/log.err
            /tmp/pytest_workflow_*/*/work
            !/tmp/pytest_workflow_*/*/work/conda
            !/tmp/pytest_workflow_*/*/work/singularity
            /tmp/pytest_workflow_*/**/.command.log
